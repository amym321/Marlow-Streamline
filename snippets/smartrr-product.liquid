
{%- liquid
  assign current_variant = product.selected_or_first_available_variant
  assign current_selling_plan_allocation = current_variant.selected_selling_plan_allocation
  if current_selling_plan_allocation == nil and current_variant.requires_selling_plan
    assign current_selling_plan_allocation = current_variant.selling_plan_allocations | first
  endif
  assign offer = current_selling_plan_allocation | default: current_variant
  assign filtered_selling_plan_groups = product.selling_plan_groups | where: "app_id", "4836205"
  assign hiddenGroups = filtered_selling_plan_groups | map: "name" | where: "[hidden]"
  assign visibleGroupsSize = filtered_selling_plan_groups.size | minus: hiddenGroups.size
  assign smartrr_unique_id = product.id
-%}

{% comment %}
  <!-- Add 'data-smartrr-form-id: product.id' to your '{ % form 'product' ... % } code so Smartrr can find your form. -->
  <!-- data-smartrr-form-id should have the same value as smartrr_unique_id, product.id in this case -->
  <!-- Add a { % render 'smartrr-product' % } in the product form for this code to be displayed. -->
  <!-- Use uiImplementDetectChange below to inform Smartrr when Variant/Quantity are changed. -->
  <!-- Set smartrr_collection for collection pages to avoid duplicate <style> and <script> for each product on the page. -->
  <!-- Add the style and script render code separately to the top of the collection page. -->
{% endcomment %}

{% unless smartrr_collection %}
  {% render 'smartrr-product-styles' %}
{% endunless %}

{% comment %}
  <!-- use this code to create a pricing display element anywhere on the page -->
  <!-- Available Styles: original(variant-price), strike(discounted price struck through), overwrite -->
  <!-- Adding '-compare' at the end of the style will show the Compare At price when One time purchase is selected -->
  <!-- Remove the 'data-use-quantity="true"' if you do not want the quantity to affect the pricing display -->
  <div data-smartrr-product-id="{{ smartrr_unique_id }}" data-smartrr-price-style="overwrite-compare" data-use-quantity="true">
    <span data-smartrr-compare-price></span>
    <span data-smartrr-regular-price></span>
    <span data-smartrr-subscribe-price></span>
  </div>
{% endcomment %}

{% comment %}
  <!-- Make sure your cart/add.js AJAX call gets this value. Older/Custom carts may not extract this input from the form. -->
{% endcomment %}
<input type="hidden" name="selling_plan" data-smartrr-selling-plan-input value="{{ current_selling_plan_allocation.selling_plan.id | default: '' }}">
<div class="data-smartrr-top-price" data-smartrr-product-id="{{ smartrr_unique_id }}"  data-smartrr-price-style="original-compare" data-smartrr-constant={{ group.id }} class="data-smartrr-top-price">
  <span data-smartrr-compare-price></span>
  <span data-smartrr-regular-price></span>
  <span data-smartrr-subscribe-price></span>{% if product == all_products["bundle-save"]%} / Bundle {% endif %}
</div>

<div class="hide" data-smartrr-page-load-variant="{{ current_variant.id }}"></div>

{% if visibleGroupsSize > 0 %}
<fieldset class="smartrr-purchase-options" data-smartrr-purchase-options>
  <div class="smartrr-no-plans-available hide" data-smartrr-no-plans>
    No available purchase options for this selection.
  </div>
  <div data-smartrr-selling-plan-groups>
    {% unless product.requires_selling_plan %}
    <div data-smartrr-selling-plan-group-id class="smartrr-otp">
      <div class="smartrr-selling-plan-group-header hide">
        <label class="smartrr-selling-plan-group-label">
          <input type="radio" data-smartrr-selling-plan-group-input name="purchase_option" value="">
          <div class="smartrr-selling-plan-group-input-display"></div>
          <div class="smartrr-selling-plan-group-name">
            <div>One time purchase</div>
          </div>
        </label>
      </div>
      <div data-smartrr-selling-plan-group-contents class="hide">

      </div>
    </div>
    {% endunless %}

    {% for group in filtered_selling_plan_groups %}
    {% unless group.name contains "[hidden]" %}
    <div data-smartrr-selling-plan-group-id="{{ group.id }}">
      <div class="smartrr-selling-plan-group-header hide">
        <label class="smartrr-selling-plan-group-label">
          <input type="radio" data-smartrr-selling-plan-group-input="{{ group.id }}"
                 name="purchase_option" value="{{ group.id }}">
          <div class="smartrr-selling-plan-group-input-display"></div>
          <div class="smartrr-selling-plan-group-name">
            <div>{{ group.name }}</div>
          </div>
        </label>
      </div>
      <div data-smartrr-selling-plan-group-contents="{{ group.id }}" class="hide">
        <div data-smartrr-selling-plan-group-plans>
          <div data-smartrr-selling-plans-select="{{ group.id }}">
            {% if group.selling_plans.size > 1 %}
            <select data-smartrr-selling-plans-select="{{ group.id }}">
              {% for plan in group.selling_plans %}
<!--               <div data-smartrr-subscription-benefits>
                <div>3 boxes of tampons, 3 bottles of lubricant</div>
                <option data-smartrr-selling-plan-select-label-input="{{ group.id }}" value="{{ plan.id }}"> <div data-smartrr-benefits-all>{{ plan.options[0].value }}</div></option>
                <div data-smartrr-benefits-all>Skip or Cancel Anytime</div>
                <div data-smartrr-benefits-all>Free Shipping</div>
              </div> -->
              {% endfor %}
            </select>
            {% else %}
            {% for plan in group.selling_plans %}

            {% endfor %}
            {% endif %}
          </div>
        </div>
      </div>
    </div>
    {%endunless %}
    {%endfor %}
  </div>

</fieldset>
{% endif %}

{% unless smartrr_collection %}
  <script type="text/javascript" src="{{ 'smartrr-product-script.js' | asset_url }}"></script>
{% endunless %}

{% if product.id %}
<script>
  if (typeof window.smartrrProductList === 'undefined') {
    window.smartrrProductList = {};
  }

  window.smartrrProductList["{{ smartrr_unique_id }}"] = {
    uniqueId: "{{ smartrr_unique_id }}",
    ui: undefined,
    logic: undefined,
    appId: "4836205",
    hiddenGroup: "[hidden]",
    formTag: "data-smartrr-form-id",
    product: {{ product|json }},
    /* Called at DOMContentLoaded when initSmartrr creates the UI and Logic Modules */
    /* Used to inform the Modules of changes in Variants and Plans */
    uiImplementDetectChange: function (ui) {
      var groupList = ui.apiQuerySelectorAllDataTag('data-smartrr-selling-plan-group-input', ui.$form);
      var selectedGroup = "";
      groupList && groupList.forEach(function (group) {
        if (group.checked) {
          selectedGroup = ui.apiGetAttribute(group, 'data-smartrr-selling-plan-group-input');
        }
      });

      /* Inform the Logic handler about the variant selected when the page loads. */
      var variantId = ui.apiGetAttribute(ui.apiQuerySelectorDataTag('data-smartrr-page-load-variant', ui.$form), 'data-smartrr-page-load-variant');
      
      ui.logic.apiSetupVariantAndGroup(variantId, selectedGroup);
      
      /* Handle the variant selector on the page here. */
      /* Get the variant selector/buttons. On change/click, get the variant id and call ui.logic.apiChangeVariant(variantId); */
      /* Example code shows how to handle a swatch */
      var grpSelectInput = ui.$form.querySelectorAll('.smartrr-grp-input');
      var variantDivSub = ui.$form.querySelector('[data-smartrr-choose-sub]')
      console.log("variantDivSub",variantDivSub)
      var variantDivOtp = ui.$form.querySelector('[data-smartrr-choose-otp]')
      console.log("variantDivOtp",variantDivOtp)
      var variantButtons = ui.$form.querySelectorAll('.variant-input input');
      
        variantButtons.forEach(function(variantInput) {
          variantInput.addEventListener('change', function() {
            var variantName = ui.apiGetValue(variantInput);
            var variant = ui.logic.apiGetVariantByName(variantName);
            ui.logic.apiChangeVariant(variant.id);
          });
        });                            
      
    
                            
        grpSelectInput.forEach(function(Input) {
          Input.addEventListener('click', function() {
              if (Input.value == "sub" && Input.checked == true){
                 variantDivSub.classList.remove("hide")              
                 variantDivOtp.classList.add("hide") 
                 variantDivSub.getElementsByTagName("INPUT")[0].checked= true
                 var variant = ui.logic.apiGetVariantByName(variantDivSub.getElementsByTagName("INPUT")[0].value);
                 ui.logic.apiChangeVariant(variant.id);
                 
              }
              else if(Input.value =="otp" && Input.checked == true) {
                 variantDivSub.classList.add("hide")              
                 variantDivOtp.classList.remove("hide") 
                 variantDivOtp.getElementsByTagName("INPUT")[0].checked= true
                 var variant = ui.logic.apiGetVariantByName(variantDivOtp.getElementsByTagName("INPUT")[0].value);
                 ui.logic.apiChangeVariant(variant.id);
              }
          });
        });
      


      
      /* Handle the plan selectors for each group. In this case, it is a <select> */
      var planSelectors = ui.apiQuerySelectorAllDataTag('data-smartrr-selling-plans-select', ui.$form);
      planSelectors.forEach(function(planSelector) {
        planSelector.addEventListener("change", function () {
          ui.logic.apiChangePlan(ui.apiGetValue(planSelector));
        });
      });

      /* Signal possible change in pricing displays when quantity is changed */
      
      var qty = ui.$form.querySelector('input[name="quantity"]');
      qty.addEventListener("change", function() {
      var currentInfo = ui.logic.apiGetCurrentCopy();
        ui.logic.apiChangePlan(ui.logic.apiGetCurrentCopy().planId);
      });
     
    },

    /* Called when Plan (the subscription frequency) is changed. */
    /* Called when One time purchase is selected. */
    uiOnPlanChange: function (ui, currentInfo) {
      if (currentInfo.groupId && currentInfo.planId) {
        /* Ensures the <select> option reflects the change in planId. */
        ui.apiSetValue(ui.apiQuerySelectorDataTag('data-smartrr-selling-plans-select', ui.$form, currentInfo.groupId), currentInfo.planId);
      }
    },
    /* Called when the group (One time purchase / Subscribe & Save) is changed. */
    uiOnGroupChange: function (ui, currentInfo) {
      var benefitsContainer = ui.apiQuerySelectorDataTag('data-smartrr-subscription-benefits', ui.$form);
      if (benefitsContainer) {
        var closed = ui.apiQuerySelectorAllDataTag('data-smartrr-benefits-subscription');
        if (ui.logic.apiIsOTP()) {
          closed.forEach(function (close) {
            close.classList.remove('smartrr-active');
          });
        } else {
          closed.forEach(function (close) {
            close.classList.add('smartrr-active');
          });
        }
      }
    },
    
    /* Called when the variant is changed */
    uiOnVariantChange: function (ui, currentInfo) { 
        var subText = ui.$form.querySelector("[data-smartrr-subscription-benefits] div")
        var grpSelect = ui.apiQuerySelectorAllDataTag('data-smartrr-selling-plan-group-id', ui.$form); 
        var variant = ui.logic.apiGetVariantById(currentInfo.variantId)
        if (variant.title.includes("Combo") ){
        	subText.innerText = "1 light, 1 regular, 1 super box"                    
        }
        else {
            subText.innerText = "3 boxes of tampons, 3 bottles of lubricant"                    
        }
        grpSelect.forEach(function (grp){
          if (variant.selling_plan_allocations && grp.dataset.smartrrSellingPlanGroupId !== ""){                
             ui.logic.apiChangeGroup(grp.dataset.smartrrSellingPlanGroupId)     
          }
          else if(grp.dataset.smartrrSellingPlanGroupId == "") {
             ui.logic.apiChangeGroup(grp.dataset.smartrrSellingPlanGroupId)  
          }                    
        })


     },

    /* Called when the quantity is retrieved for used in pricing display calculation. */
    uiGetQuantity: function (ui) {
      /* Handle the quantity input on the page here. */
      /* return 1 if you don't want quantity to be considered in pricing display elements */
      /* return ui.apiGetValue(ui.$form.querySelector('input[name="quantity"]')); */
      return ui.apiGetValue(ui.$form.querySelector('input[name="quantity"]'));
    },

    uiModifyPrice: function (ui, $div, money) {
      /*
      Change price here based on requirements. For example, setting up per case/pound/bag price.
      money.regular: amount that shows up when strike display is chosen. This is the original un-discounted price.
      money.subscribe: the final discounted price or one-time price that shows up in the checkout.
      */
      return money;
    }
  };                 

  window.initSmartrr && window.initSmartrr("{{ smartrr_unique_id }}");
</script>

{% endif %}
